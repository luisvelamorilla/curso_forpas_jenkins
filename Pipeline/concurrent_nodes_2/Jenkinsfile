pipeline {
    agent none
    stages {
        stage('Non-Parallel stage') {
            steps {
                echo 'Non-Parallel stage'
            }
        }

        stage('Parallel stage') {
            steps {
                echo 'Parallel stage'
                script {
                    parallel parallelStagesMap
                }
            }
        }        
    }
}


def agents  = ['cliente1', 'cliente2']


def generateStage(nodeLabel) {
    return {
        stage("Runs on ${nodeLabel}") { 
            node(nodeLabel) {
                currentBuild.displayName = "${BUILD_ID} - ${JOB_NAME} - ${NODE_NAME}"
                echo "Running on ${nodeLabel}"
                sh 'sleep 10'
            }
        }
    }
}


def parallelStagesMap = agents.collectEntries {
    ["${it}" : generateStage(it)]
}