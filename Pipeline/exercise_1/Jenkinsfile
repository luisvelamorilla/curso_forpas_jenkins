pipeline {
    
    agent {
        label "cliente3"
    }
    
    options {
        timeout(time: 1, unit: 'HOURS')
    }
    
    stages {
        stage('Preparación') {
            options {
                timeout(time: 10, unit: 'MINUTES')
            }
            steps {
                script {
                    def PROGRAM = params.PROGRAM
                    def OPTIONS = params.OPTIONS
                    currentBuild.displayName = "${BUILD_ID} - ${JOB_NAME} - ${NODE_NAME}"
                }
            }
        }
        
        stage('Instalación') {
            steps {
                script {
                    currentBuild.displayName = "${BUILD_ID} - ${JOB_NAME} - ${NODE_NAME}"                    
                    def output = powershell(returnStdout: true, script: '''
                            choco install $ENV:PROGRAM $ENV:OPTIONS -y
                        ''')
                        echo output.trim()                    
                    

                    /*
                    def result = powershell '''
                        $result = choco install $ENV:PROGRAM $ENV:OPTIONS -y
                    ''' 
                    echo "El resultado es: ${result}"
                    */
                }
            }
        }
        
        stage('Verificación') {
            steps {
                script {
                    currentBuild.displayName = "${BUILD_ID} - ${JOB_NAME} - ${NODE_NAME}"                    
                    def INSTALLED = powershell(
                        script: "choco list --localonly | Select-String -Pattern ${PROGRAM}",
                        returnStdout: true
                    ).trim()

                    echo "El programa instalado es: ${INSTALLED}"
                    
                    if (INSTALLED == null || INSTALLED.isEmpty()) {
                        echo "El programa ${PROGRAM} no se ha instalado correctamente."
                        // error "El programa ${PROGRAM} no se ha instalado correctamente."
                    } else {
                        echo "El programa ${PROGRAM} se ha instalado correctamente."
                    }
                }
            }
        }
    }
}
