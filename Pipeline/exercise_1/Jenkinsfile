pipeline {
    
    agent {
        label "cliente3"
    }
    
    options {
        timeout(time: 1, unit: 'HOURS')
    }
    
    stages {
        stage('Preparación') {
            options {
                timeout(time: 10, unit: 'MINUTES')
            }
            steps {
                script {
                    def ACTION = params.ACTION
                    def PROGRAMS = params.PROGRAMS
                    def OPTIONS = params.OPTIONS                    
                    currentBuild.displayName = "${BUILD_ID} - ${JOB_NAME} - ${NODE_NAME}"

                    echo "ACTION: ${ACTION}" 
                    echo "PROGRAMS: ${PROGRAMS}" 
                    echo "OPTIONS: ${OPTIONS}"                     
                }
            }
        }

        stage('Instalación') {
            steps {
                script {        
                    def INSTALLING = powershell(
                        script: '''
                            $PROGRAMS = $ENV:PROGRAMS -Split ' '
                            choco $ENV:ACTION $PROGRAMS $ENV:OPTIONS -y
                        ''',
                        returnStdout: true
                    ).trim()
                    echo "Resultado: ${INSTALLING}"   
                }                               
            }
        }
  
        stage('Verificación') {
            steps {
                script {        
                    def INSTALLED_ITEMS = ['a']
                    def CHECK = powershell(
                        script: '''
                                ForEach($ITEM in ${INSTALLED_ITEMS}){
                                    Write-Host $ITEM
                                    choco list --localonly | Select-String -Pattern ${ITEM}
                                }
                            ''',
                        returnStdout: true
                    ).trim()
                    echo "Check: ${CHECK}"   

                    echo "La accion a realizar es: ${ACTION}"
                    echo "Los programas son: ${PROGRAMS}"
                    /*
                    if (INSTALLED == null || INSTALLED.isEmpty()) {
                        echo "El programa ${PROGRAM} no se ha instalado correctamente."
                        // error "El programa ${PROGRAM} no se ha instalado correctamente."
                    } else {
                        echo "El programa ${PROGRAM} se ha instalado correctamente."
                    }
                     */
                }
            }
        }

    }
}
