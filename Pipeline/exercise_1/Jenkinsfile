pipeline {
    
    agent {
        label "cliente3"
    }
    
    options {
        timeout(time: 1, unit: 'HOURS')
    }
    
    stages {
        stage('Preparación') {
            agent {
                label 'cliente3'
            }            
            currentBuild.displayName = "${BUILD_ID} - ${JOB_NAME} - ${NODE_NAME}"

            options {
                timeout(time: 10, unit: 'MINUTES')
            }
            def PROGRAM = params.PROGRAM
            def OPTIONS = params.OPTIONS
        }
        
        stage('Instalación') {
            steps {
            agent {
                label 'cliente3'
            }            
            currentBuild.displayName = "${BUILD_ID} - ${JOB_NAME} - ${NODE_NAME}"
                        
                script {
                    def result = powershell '''
                        $result = choco install ${PROGRAM} ${OPTIONS} -y
                    ''' 
                    echo "El resultado es: ${result}"
                }
            }
        }
        
        stage('Verificación') {
            agent {
                label 'cliente3'
            }            
            currentBuild.displayName = "${BUILD_ID} - ${JOB_NAME} - ${NODE_NAME}"
            
            steps {
                script {
                    def INSTALLED = powershell(
                        script: "choco list --localonly | Select-String -Pattern ${PROGRAM}",
                        returnStdout: true
                    ).trim()

                    echo "El programa instalado es: ${INSTALLED}"
                    
                    if (INSTALLED == 0) {
                        echo "El programa $programa se ha instalado correctamente."
                    } else {
                        error("El programa $programa no se ha instalado correctamente.")
                    }
                }
            }
        }
    }
}
